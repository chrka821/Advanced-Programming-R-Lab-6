% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast.R
\name{knapsack_dynamic}
\alias{knapsack_dynamic}
\title{Knapsack Dynamic Programming Approach}
\usage{
knapsack_dynamic(x, W)
}
\arguments{
\item{x}{data.frame consisting of weights and values}

\item{W}{size of the knapsack}
}
\value{
optimal knapsack solution
}
\description{
This solution to the knapsack problem utilizes a dynamic programming approach.
In this a matrix is used as a sort of look-up table. The columns correspond to the
knapsack size and the rows to the first 1...i items. For each item it is evaluated,
whether it fits in the knapsack or not, and whether it would improve on the previous,
best solution that would still allow it's inclusion given a certain knapsack size.
After the matrix is fully created the best combination can be retrieved through back-
tracking. The complexity of the algorithm is based on the matrix size which is n * W, 
hence the complexity is O(nW)
}
\examples{
 knapsack_objects <- data.frame(
  w = sample(1:4000, size = 16, replace = TRUE),
  v = runif(n = 16, min = 0, max = 10000)
  )
result <- knapsack_dynamic(x = knapsack_objects, W = 3500)

}
